---
import FormattedDate from '../FormattedDate.astro';

export interface Props {
    title: string;
    date: Date;
    author: string;
    categories: string[];
    image?: {
        src: string;
        alt: string;
    };
}

const { title, date, author, categories, image } = Astro.props;
---

<header class="mb-12">
    <div class="mb-6">
        <a href="/blog" class="text-neutral-600 dark:text-neutral-400 hover:text-neutral-900 dark:hover:text-neutral-100 hover:underline inline-flex items-center transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            Back to Blog
        </a>
    </div>

    <h1 class="text-4xl md:text-5xl font-bold mb-6 text-neutral-900 dark:text-neutral-50">{title}</h1>

    <div class="flex flex-wrap gap-3 mb-4 text-neutral-600 dark:text-neutral-400">
        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <FormattedDate date={date} format="long" />
        </div>

        <div class="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            {author}
        </div>
    </div>

    <div class="flex flex-wrap gap-2 mb-8">
        {categories.map(category => (
            <a
                href={`/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}`}
                class="px-3 py-1 bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 text-sm rounded-full hover:bg-neutral-200 dark:hover:bg-neutral-700 transition-colors"
            >
                {category}
            </a>
        ))}
    </div>

    {image?.src && (
        <div class="aspect-square rounded-xl overflow-hidden mb-8 shadow-lg">
            <img
                src={image.src}
                alt={image.alt || title}
                class="w-full h-auto object-cover"
            />
        </div>
    )}
</header>