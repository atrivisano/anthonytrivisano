---
export interface Props {
    categories: string[];
    currentCategory: string;
}

const { categories, currentCategory } = Astro.props;

// Sort categories alphabetically with 'All' at the beginning
const sortedCategories = ['All', ...categories.sort()];

// Convert category to URL-friendly format
const getCategorySlug = (category: string) => {
    return category.toLowerCase().replace(/\s+/g, '-');
};
---

<div class="bg-neutral-900 py-4 border-y border-neutral-800 sticky top-0 z-10">
    <div class="container mx-auto px-6">
        <div class="flex items-center justify-between">
            <div class="text-sm text-neutral-400 mr-4 hidden md:block">Filter by:</div>

            <div class="overflow-x-auto flex-grow">
                <div class="flex items-center gap-2 md:gap-3 min-w-max">
                    {sortedCategories.map(category => {
                        const isActive = category === currentCategory;
                        const url = category === 'All'
                            ? '/blog/'
                            : `/blog/category/${getCategorySlug(category)}`;

                        return (
                            <a
                                href={url}
                                class:list={[
                                    'px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap transition-colors',
                                    {
                                        'bg-white text-neutral-900 hover:bg-neutral-200': isActive,
                                        'bg-neutral-800 text-neutral-100 hover:bg-neutral-700': !isActive
                                    }
                                ]}
                            >
                                {category}
                            </a>
                        );
                    })}
                </div>
            </div>
        </div>
    </div>
</div>