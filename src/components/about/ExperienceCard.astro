---
interface Achievement {
    text: string;
}

interface Props {
    title: string;
    company: string;
    period: string;
    description: string;
    achievements: Achievement[];
    icon: string;
}

const { title, company, period, description, achievements, icon } = Astro.props;
---

<div class="flex gap-5">
    <div class="flex w-full h-16 max-w-16 items-center justify-center rounded-full bg-neutral-900">
        <Fragment set:html={icon} />
    </div>
    <div class="flex flex-col gap-2.5">
        <header class="flex flex-col gap-1">
            <h3 class="text-xl font-semibold text-white">{title}</h3>
            <p class="text-xs text-neutral-50">{company} | {period}</p>
        </header>
        <section class="grid grid-cols-1 gap-10 sm:grid-cols-2">
            <p class="text-base text-neutral-50">{description}</p>
            <ul class="flex flex-col gap-2.5">
                {achievements.map((achievement) => (
                    <li class="flex items-start">
                        <div class="flex-shrink-0">
                            <svg class="h-6 w-6 text-neutral-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </div>
                        <p class="ml-3 text-sm text-neutral-50">{achievement.text}</p>
                    </li>
                ))}
            </ul>
        </section>
    </div>
</div>