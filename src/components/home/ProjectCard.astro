---
interface Props {
    title: string;
    description: string;
    imageUrl: string;
    link: string;
    technologies?: string[];
    client?: string;
}

const {
    title,
    description,
    imageUrl = "/api/placeholder/600/400",
    link,
    technologies = [],
    client = ""
} = Astro.props;
---

<div class="group relative overflow-hidden rounded-2xl bg-neutral-900 shadow-md hover:shadow-xl transition-all duration-300">
    <div class="p-6">
        <h3 class="text-xl font-semibold text-white">
            <a href={link} class="hover:text-neutral-300 transition-colors">{title}</a>
        </h3>
        {client && <p class="mt-1 text-sm text-neutral-400">{client}</p>}
        <p class="mt-4 text-white line-clamp-3">{description}</p>

        {technologies.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
                {technologies.slice(0, 3).map(tech => (
                    <span class="inline-flex text-xs bg-neutral-800 px-2 py-1 rounded text-neutral-300">
                        {tech}
                    </span>
                ))}
                {technologies.length > 3 && (
                    <span class="inline-flex text-xs bg-neutral-800 px-2 py-1 rounded text-neutral-300">
                        +{technologies.length - 3} more
                    </span>
                )}
            </div>
        )}

        <a href={link} class="mt-6 inline-flex items-center text-sm font-medium text-white hover:text-neutral-300 transition-colors">
            View Project
            <svg class="ml-2 h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z" clip-rule="evenodd" />
            </svg>
        </a>
    </div>
</div>