---
export const prerender = true;

// src/pages/blog/category/[category].astro
import { getCollection } from 'astro:content';
import MainLayout from '../../../layouts/MainLayout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import BlogPostCard from '../../../components/blog/PostCard.astro';
import CategoryNav from '../../../components/blog/CategoryNav.astro';

export async function getStaticPaths() {
    const posts = await getCollection('blog');

    // Make sure posts is an array and has data
    const validPosts = Array.isArray(posts) ? posts : [];

    // Extract all unique categories from blog posts
    const categories = [...new Set(validPosts.flatMap(post =>
        post.data && Array.isArray(post.data.categories) ? post.data.categories : []
    ))];

    // Create a path for each category
    return categories.map(category => {
        const filteredPosts = validPosts.filter(post =>
            post.data && Array.isArray(post.data.categories) && post.data.categories.includes(category)
        );

        return {
            params: { category: category.toLowerCase().replace(/\s+/g, '-') },
            props: {
                category,
                posts: filteredPosts,
                categories
            }
        };
    });
}

const { category, posts, categories } = Astro.props;

// Make sure posts is an array before sorting
const postsArray = Array.isArray(posts) ? posts : [];

// Sort posts by date (newest first)
const sortedPosts = [...postsArray].sort((a, b) => {
    // Check if data and date exist before comparing
    if (a.data?.date && b.data?.date) {
        return new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf();
    }
    return 0;
});

const pageTitle = `${category} Articles - Anthony Trivisano`;
const pageDescription = `Explore articles about ${category.toLowerCase()} from Anthony Trivisano, VP of Development & Project Management.`;
---

<MainLayout title={pageTitle} description={pageDescription}>
    <div class="bg-neutral-950">
        <Header slot="header" />

        <main class="min-h-screen">
            <!-- Page Header -->
            <section class="bg-neutral-950 py-16 md:py-24">
                <div class="container mx-auto px-6">
                    <div class="max-w-4xl mx-auto text-center">
                        <h1 class="text-3xl md:text-5xl font-bold text-white mb-6">
                            {category}
                        </h1>
                        <p class="text-xl text-neutral-300 mb-8">
                            Articles, insights, and resources about {category.toLowerCase()}.
                        </p>
                    </div>
                </div>
            </section>

            <!-- Category Navigation -->
            <CategoryNav
                categories={categories}
                currentCategory={category}
            />

            <!-- Blog Posts -->
            <section class="py-12 md:py-16 bg-neutral-950">
                <div class="container mx-auto px-6">
                    {sortedPosts.length > 0 ? (
                        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
                            {sortedPosts.map(post => (
                                <BlogPostCard post={post} />
                            ))}
                        </div>
                    ) : (
                        <div class="text-center py-16">
                            <h2 class="text-2xl font-medium text-white mb-4">No posts found</h2>
                            <p class="text-neutral-300 mb-8">
                                There are currently no posts in this category. Check back soon for new content!
                            </p>
                        </div>
                    )}
                </div>
            </section>
        </main>

        <Footer slot="footer" />
    </div>
</MainLayout>